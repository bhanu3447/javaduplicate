package javaPractice;

public class Sorting 
{
  public static void main(String[] args) 
  {
	int a[]= {12,2,4,6,9};
//	bubbleSort(a);
//	insertionSort(a);
//	selectionSort(a);
//	quickSort(a, 0, a.length-1);
	for(int c:a)
	{
		System.out.println(c);
	}
  }
  public static void bubbleSort(int a[])
  {
	  for(int i=0;i<a.length-1;i++)
	  {
		  for(int j=0;j<a.length-1-i;j++)
		  {
			  if(a[j]>a[j+1])
			  {
				  int temp=a[j];
				  a[j]=a[j+1];
				  a[j+1]=temp;
			  }
		  }
	  }
  }
  public static void insertionSort(int a[])
  {
	  for(int i=1;i<a.length;i++)
	  {
		  int key=a[i];
		  int j=i-1;
		  while(j>=0&&a[j]>key)
		  {
			  a[j+1]=a[j];
			  j--;
		  }
		  a[j+1]=key;
	  }
  }
  public static void selectionSort(int a[])
  {
	  for(int i=0;i<a.length;i++)
	  {
		 int index=i; 
		 for(int j=index+1;j<a.length;j++)
		 {
			 if(a[j]<a[index]) index=j;
		 }
		 if(i!=index)
		 {
			 int temp=a[i];
			 a[i]=a[index];
			 a[index]=temp;
		 }
	  }
  }
  public static void quickSort(int a[],int start,int end)
  {
	  if(start>=end) return;
	  int i=start;
	  int j=end;
	  int pivot=a[(start+end)/2];
	  while(i<=j)
	  {
		  while(a[i]<pivot)i++;
		  while(a[j]>pivot)j--;
		  if(i<=j)
		  {
			  int temp=a[i];
			  a[i]=a[j];
			  a[j]=temp;
			  i++;
			  j--;
		  }
		  quickSort(a, start,j);
		  quickSort(a, i,end);
	  }
  }
  public static void sort(int a[])
  {
	  if(a.length==1) return;
	  int[]l=new int [a.length/2];
	  int []r=new int[a.length-l.length];
	  int i=0;
	  while(i<l.length)
	  {
		  l[i]=a[i];
		  i++;
	  }
	  int j=0;
	  while(j<r.length)
	  {
		  r[j]=a[i];
		  j++;
	  }
	  sort(l);
	  sort(r);
	  merge(l,r,a);
  }
  public static void merge(int a[],int b[],int c[])
  {
	  int i=0;
	  int j=0;
	  int k=0;
	  
	  while(i<a.length&&j<b.length)
	  {
		  if(a[i]<b[j])
		  {
			  c[k]=a[i];
			  i++;
			  k++;
		  }
		  else
		  {
			  c[k]=b[j];
			  k++;
			  j++;
		  }
	  }
	  while(i<a.length)
	  {
		  c[k]=a[i];
		  i++;
		  k++;
	  }
	  while(j<a.length)
	  {
		  c[k]=b[j];
		  k++;
		  j++;
	  }
  }
}
